import java.util.Scanner;

public class AnnualDays {
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		int [][] AnnualDaysByMonth; // 2차원 배열의 레퍼런스 변수 선언
		System.out.print("년도를 입력하세요 : ");
		int year = scanner.nextInt(); // 해당 년도 입력 받기
		boolean yoonNyun; // 윤년 여부
		if( (year%4==0) && (year%100!=0) || (year%400)==0 ) { // 윤년 계산하기
			yoonNyun = true;
		}
		else {
			yoonNyun = false;
		}
		
		AnnualDaysByMonth = new int [12][]; // 각 행(월)을 가리키는 레퍼런스 배열 생성
		
		for(int i=1;i<=7;i++) { // 1월부터 7월까지
			if(i%2==0) {
				AnnualDaysByMonth[i-1] = new int [30]; // 짝수년은 30일의 원소를 가짐
				if(i==2) { // 2월에서
					if(yoonNyun==true) {
						AnnualDaysByMonth[i-1] = new int [29]; // 윤년 존재
					}
					else {
						AnnualDaysByMonth[i-1] = new int [28]; // 윤년 존재하지 않음
					}
				}
			}
			else {
				AnnualDaysByMonth[i-1] = new int [31]; // 홀수년은 31일의 원소를 가짐
			}
		}
		
		for(int i=8;i<=12;i++) { // 8월부터 12월까지
			if(i%2==0) {
				AnnualDaysByMonth[i-1] = new int [31]; // 짝수년은 31일의 원소를 가짐
			}
			else {
				AnnualDaysByMonth[i-1] = new int [30]; // 홀수년은 30일의 원소를 가짐
			}
		}
		
		/////////// 결과 확인용
		for(int i=0;i<AnnualDaysByMonth.length;i++) {
			for(int j=0;j<AnnualDaysByMonth[i].length;j++) {
				AnnualDaysByMonth[i][j] = j+1;
			}
		} // 일 수 저장하기
		
		for(int i=0;i<AnnualDaysByMonth.length;i++) {
			System.out.print((i+1)+"월 : ");
			for(int j=0;j<AnnualDaysByMonth[i].length;j++) {
				System.out.print(AnnualDaysByMonth[i][j] + " ");
			}
			System.out.println();
		}
		/////////// 결과 확인용
		scanner.close();
	}
}
